@import "core";
@import "neon-color";
@import "neon-icons";
@import "neon-typography";


:root,
[screensize="s"] {
	//--gutter: 12px;
	--gutter: 16px;
}
[screensize="m"],
[screensize="l"] {
	--gutter: 24px;
}

:root {
	// baseline indendation
	--indent: 48px;
	--seam-size: 2px;
}


// todo: investigate this selector. is there something else, like :empty that would work better?
a[href]:not([fx-item]) {
	color: var(--tint);
}




p {
	padding-top: 4px;
	padding-bottom: 6px;
}

progress[circle]::-ms-fill,
progress[ring]::-ms-fill {
	animation-name: -ms-ring;
}


:root {
	--titlebar-height: 31px;
	/* 46 per button */
	--titlebar-padding-left: 12px;
	// TODO this is default padding, it has to be updated with the size of drawer
	//--titlebar-padding-left: 48px;
}

flexus-titlebar {
	display: flex;
	align-items: stretch;
	padding-left: var(--titlebar-padding-left);
	height: var(--titlebar-height);
	line-height: var(--titlebar-height);
	font-size: 12px;
	letter-spacing: 0;

	z-index: 9999;
	position: absolute;
	top: 0;
	right: 0;
	left: 0;

	// Pushes content of all 
	&:not([seamless]) ~ * {
		padding-top: var(--titlebar-height);
	}

	[drag] {
		-webkit-app-region: drag;
	}
	// It is critical to overflow everything in the titlebar besides native win buttons.
	& > *:not([icon^="chrome"]) {
		overflow: hidden;
	}

	i,
	button {
		margin: 0 !important;
		padding: 0 !important;
		width: var(--titlebar-height);
		min-height: initial !important;
		background-color: transparent;
	}
	i,
	[icon]:before {
		font-size: 10px;
	}
	[icon^="chrome"] {
		width: 46px !important;
		flex-shrink: 0;
		transform: none !important;
		&:before {
			font-size: 10px;
		}
		&:hover {
			background-color: ~'rgba(var(--foreground-rgb), 0.1)';
		}
		&:active {
			background-color: ~'rgba(var(--foreground-rgb), 0.2)';
		}
	}
	[icon="chrome-fullscreen"]::before      {content: '\E92C'}
	[icon="chrome-exit-fullscreen"]::before {content: '\E92D'}
	[icon="chrome-back"]::before     {content: '\E830'}
	[icon="chrome-minimize"]::before {content: '\E921'}
	[icon="chrome-maximize"]::before {content: '\E922'}
	[icon="chrome-unmaximize"]::before  {content: '\E923'}
	[icon="chrome-close"]::before    {content: '\E8BB'}
	[icon="chrome-close"]:hover {
		background-color: #e81123 !important;
		color: #FFF !important;
	}
	[icon="chrome-close"]:active {
		opacity: 0.6;
	}
}



[avatar] {
	/*&:not(:checked) {
		color: inherit;
	}*/
	//&:not(:checked)::before {
	//	color: var(--custom-foreground, var(--background, var(--background-default))) !important;
	//}
	input[type="checkbox"]& {
		&:active,
		&:checked {
			background-image: none !important;
		}
		&:not(:checked):not(:hover) {
			border-color: transparent !important;
		}
	}
	&[round] {
		border-radius: 50%;
	}
}



[card]:not(flexus-view) {
	background-color: ~'rgba(var(--foreground-rgb), 0.1)';
}




@import "neon-body";
@import "neon-overlay";
@import "neon-input";
@import "neon-item";